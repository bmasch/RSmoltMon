{
    "contents" : "#' Create jitter plot of first detected date vs. last detected location\n#'\n#' @param data.frame\n#' @param color\n#'\n#' @return data.frame\n#' @export\n#'\n#' @examples\n#' plotDetections(dataset)\nplotDetections <- function(df,color=\"MonitorMod\"){\n  if(color==\"release\")ggplot2::ggplot(df,ggplot2::aes(date1,mon2,colour=release)) + ggplot2::geom_jitter() + ggplot2::xlab(\"First Detected Date\") + ggplot2::ylab(\"Last Detected Location\")\n  else ggplot2::ggplot(df,ggplot2::aes(date1,mon2,colour=MonitorMod)) + ggplot2::geom_jitter() + ggplot2::xlab(\"First Detected Date\") + ggplot2::ylab(\"Last Detected Location\")\n}\n\n#' Create plot of arrivals at GRJ, aggregated by day\n#'\n#' @param data.frame\n#' @param colour.scheme\n#'\n#' @return data.frame\n#' @export\n#'\n#' @examples\n#' plotArrivals(dataset)\nplotArrivals <- function(df,group.surrogates=TRUE,type=\"area\",scale.free=\"TRUE\"){\n  if(group.surrogates)df$release <- ifelse(df$smp.group==\"Surrogate\",\"GATE\",as.character(df$release))\n  sites <- dplyr::arrange(dplyr::summarise(dplyr::group_by(df,release),min.date=min(date1)),min.date)\n  df <- dplyr::summarise(dplyr::group_by(df,smp.date1,release,rel.site),count=n())\n  df$release <- factor(df$release,levels=sites$release)\n    p <- ggplot2::ggplot(df,aes(smp.date1,count)) + xlab(\"GRJ Arrival Date\") + ylab(\"Count\")\n    if(type==\"area\") p <- p + ggplot2::geom_area(aes(fill=rel.site))\n    else p <- p + ggplot2::geom_line(aes(group=release))\n    if(scale.free) p <- p + facet_grid(release ~ .,scale=\"free\")\n    else p <- p + facet_grid(release ~ .)\n    p\n}\n\n#' Plot listed release date vs. PTAGIS release date\n#'\n#' @param data.frame\n#' @param color\n#'\n#' @return data.frame\n#' @export\n#'\n#' @examples\n#' compareReleaseDates(dataset)\ncompareReleaseDates <- function(df,color=\"release\"){\n  if(color==\"release\")g <- ggplot2::ggplot(df,ggplot2::aes(release.date,rel.date,colour=release))\n  else g <- ggplot2::ggplot(df,ggplot2::aes(release.date,rel.date,colour=rel.site))\n  g + ggplot2::geom_point() + ggplot2::xlab(\"Listed Release Date\") + ggplot2::ylab(\"PTAGIS Release Date\")\n}\n\n\n#' Check Release Dates\n#'\n#' @param data.frame\n#'\n#' @return data.frame\n#' @export\n#'\n#' @examples\n#' checkReleaseDates(dataset)\ncheckReleaseDates <- function(df){\n  df1 <- unique(dplyr::select(df,release,release.date))\n  df1 <- dplyr::arrange(df1,release.date)\n  df2 <- df1\n  df1$release <- paste(getSmallDate(df1$release.date),df1$release)\n  df$release <- paste(getSmallDate(df$release.date),df$release)\n  df$release <- factor(df$release,levels=df1$release)\n  ggplot2::ggplot(df,ggplot2::aes(release.date,date1,colour=release)) + ggplot2::geom_jitter() +  ggplot2::geom_point(data=df1,ggplot2::aes(release.date,release.date),shape=3,size=5,colour=\"black\") + ggplot2::xlab(\"Release Date\") + ggplot2::ylab(\"First Detected Date\")\n}\n\n#' Plot sample rates\n#'\n#' @param data.frame\n#' @param data.frame\n#'\n#' @return data.frame\n#' @export\n#'\n#' @examples\n#' plotSampleRates(dataset)\nplotSampleRates <- function(sample.data,facet=FALSE){\n  sdlong <- reshape2::melt(sample.data,id.vars=1,measure.vars=c(6,7,8,9),variable.name=\"rate.type\")\n  if(facet)ggplot(sdlong,aes(smp.date,value,colour=rate.type)) + geom_point() + facet_grid(rate.type ~ .)\n  else ggplot(sdlong,aes(smp.date,value,colour=rate.type)) + geom_point()\n}\n\n#' Plot bar chart to check for potential matches for untagged releases\n#'\n#' @param releases\n#' @param mode\n#' @return NULL\n#' @export\n#'\n#' @examples\n#' plotMarkingTagging(releases)\nplotMarkingTagging <- function(releases,mode=\"marking\"){\n    releases$tagged <- ifelse(releases$PIT.tagged!=0,\"PIT-tagged\",\"Not PIT-tagged\")\n    releases$Date <- lubridate::mdy(releases$Start)\n    releases$release <- releases$name\n    releases$Unmarked <- releases$released - releases$AD.only - releases$AD.CWT - releases$CWT.only\n    if(mode==\"marking\"){\n    rel.long <- melt(releases,id.vars=c(\"Date\",\"tagged\"),measure.vars=c(\"Unmarked\", \"AD.only\",\"AD.CWT\",\"CWT.only\"),variable.name=\"marking\",value.name=\"count\")\n    ggplot2::ggplot(rel.long,aes(Date,count,fill=marking)) + geom_bar(stat=\"identity\") + facet_grid(tagged ~ .)\n    }\n  else{\n    ggplot2::ggplot(releases,aes(Date,release,colour=tagged,size=released)) + geom_point()\n  }\n}\n\n#' Plot Operational Dates\n#'\n#' @param ops\n#' @param size\n#'\n#' @return NULL\n#' @export\n#'\n#' @examples\n#' ops <- read.csv(\"operations.csv\")\n#' plotOperations(ops)\nplotOperations <- function(ops,size=5){\n  ops$id=seq(1:nrow(ops))\n  ops$start <- lubridate::ymd_hms(ops$start)\n  ops$stop <- lubridate::ymd_hms(ops$stop)\n  ops.long <- reshape2::melt(ops,id.vars=c(\"id\",\"operation\",\"message\",\"reference\"),measure.vars=c(\"start\",\"stop\"),variable.name=\"mode\", value.name=\"date\")\n  ggplot2::ggplot(ops.long,aes(date,operation,group=id,colour=reference)) + geom_line(size=size)\n}\n\n\n",
    "created" : 1445278103598.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "314697692",
    "id" : "33380837",
    "lastKnownWriteTime" : 1445536062,
    "path" : "~/SMP/RSmoltMon/R/SMPPlottingFunctions.R",
    "project_path" : "R/SMPPlottingFunctions.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}