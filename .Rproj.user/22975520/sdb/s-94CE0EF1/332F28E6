{
    "contents" : "#' Returns a set of tags, one from each mark file.\n#'\n#'\n#'\n#' @param smp\n#'\n#' @return A dataframe with one column, one tag from each mark file.\n#' @export\n#'\n#' @examples\n#' mfile.tags <- getMarkFileFish(data)\ngetMarkFileFish <- function(smp){\n  fish <- dplyr::summarise(dplyr::group_by(smp,mfile),date1=min(date1))\n  fish <- merge(fish,smp)\n  return(dplyr::select(fish,tag))\n}\n\n#' Get surrogates (i.e. GATE1 etc.).\n#'\n#'\n#'\n#' @param data.frame\n#'\n#' @return A dataframe.\n#' @export\n#'\n#' @examples\n#' surrogates <- surrogates(data)\nsurrogates <- function(df,keep=TRUE){\n  if(keep)return(dplyr::filter(df,smp.group==\"Surrogate\"))\n  else return(dplyr::filter(df,smp.group!=\"Surrogate\"))\n}\n\n#' Add release date to detections.\n#'\n#' @param data.frame\n#'\n#' @return A dataframe.\n#' @export\n#'\n#' @examples\n#' detections.plus.release <- addReleaseDate(detections,releases)\n#' detections.plus.release2 <- addReleaseDate(detections,releases,PTAGIS=TRUE)\naddReleaseDate <- function(df,release.data,PTAGIS=FALSE){\n  #PTAGIS==TRUE\n  #merge detections with dataframe of mark file name and release date\n  if(PTAGIS){\n    releases <- data.frame(mfile=release.data$Mark.File.Name,rel.date=mdy(release.data$Release.Date.MMDDYYYY))\n  }\n  else{\n    releases <- data.frame(release=release.data$name,release.date=lubridate::mdy(release.data$Start))\n  }\n  return(merge(df,releases))\n}\n\n\n#' Get sample data\n#'\n#' @param detections\n#' @param smp\n#'\n#' @return data.frame\n#' @export\n#'\n#' @examples\n#' srates <- getSampleData(detections,smp)\ngetSampleData <- function(detections,smp){\n  detections <- dplyr::filter(detections,mon2 != \"ADULT FISH RETURN\")\n  total <- dplyr::summarise(dplyr::group_by(detections,smp.date1),total=n())\n  yes.total <- dplyr::summarise(dplyr::group_by(dplyr::filter(detections,MonitorMod==\"Y\"),smp.date1),yes.total=n())\n  no.total <- dplyr::summarise(dplyr::group_by(dplyr::filter(detections,MonitorMod==\"N\"),smp.date1),no.total=n())\n  yes.sample <- dplyr::summarise(dplyr::group_by(dplyr::filter(detections,mon2==\"SAMPLE TANK\" | mon2 == \"SUBSAMPLE\", MonitorMod==\"Y\"),smp.date1),yes.sample=n())\n  no.sample <- dplyr::summarise(dplyr::group_by(dplyr::filter(detections,mon2==\"SAMPLE TANK\" | mon2 == \"SUBSAMPLE\", MonitorMod==\"N\"),smp.date1),no.sample=n())\n  rates <- merge(yes.sample,no.sample,all.x=TRUE,all.y=TRUE)\n  rates <- merge(rates,yes.total,all.x=TRUE,all.y=TRUE)\n  rates <- merge(rates,no.total,all.x=TRUE,all.y=TRUE)\n  rates[is.na(rates)] <- 0\n  rates$yes.rate <- rates$yes.sample/rates$yes.total\n  rates$no.rate <- rates$no.sample/rates$no.total\n  rates$total.rate <- (rates$yes.sample+rates$no.sample)/(rates$yes.total+rates$no.total)\n  names(rates)[1] <- \"smp.date\"\n  names(smp)[1] <- \"smp.date\"\n  smp$smp.date <- lubridate::mdy(smp$smp.date)\n  sample <- merge(rates,smp,all.x=TRUE)\n  sample[is.na(sample)] <- 0\n  return(sample)\n}\n\n#' Parse smp file\n#'\n#' @param smp\n#'\n#' @return data.frame\n#' @export\n#'\n#' @examples\n#' smp <- parseSMP(smp)\nparseSMP <- function(smp){\n  names(smp)[1] <- \"smp.date\"\n  smp$smp.date <- lubridate::mdy(smp$smp.date)\n  return(smp)\n}\n\n#' Get month and day from a date\n#'\n#' @param date\n#'\n#' @return string\n#' @export\n#'\n#' @examples\n#' getSmallDate(lubridate::ymd(\"2012-05-01\"))\ngetSmallDate <- function(date){\n  return(paste(lubridate::month(date),lubridate::day(date),sep=\"/\"))\n}\n\n\n\n\n\n\n",
    "created" : 1445012509399.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "974008650",
    "id" : "332F28E6",
    "lastKnownWriteTime" : 1445537275,
    "path" : "~/SMP/RSmoltMon/R/SMPUtilities.R",
    "project_path" : "R/SMPUtilities.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}